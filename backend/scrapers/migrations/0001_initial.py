# Generated by Django 4.2.20 on 2025-06-04 12:37

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_html', models.TextField(blank=True, help_text='The raw HTML content of the forex signal', null=True)),
                ('content_text', models.TextField(help_text='The formatted text representation of the forex signal')),
                ('scrape_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('source_url', models.URLField(help_text='FX Leaders URL where the signal was scraped from')),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('pending', 'Pending')], default='success', help_text='Status of the scraping operation', max_length=10)),
                ('is_processed', models.BooleanField(default=True, help_text='Whether the signal has been processed')),
                ('instrument', models.CharField(blank=True, help_text='Forex pair or instrument', max_length=50)),
                ('action', models.CharField(blank=True, help_text='Buy or Sell signal', max_length=10)),
                ('entry_price', models.CharField(blank=True, help_text='Entry price for the signal', max_length=20)),
                ('take_profit', models.CharField(blank=True, help_text='Take profit price', max_length=20)),
                ('stop_loss', models.CharField(blank=True, help_text='Stop loss price', max_length=20)),
                ('status_signal', models.CharField(blank=True, help_text='Signal status (Active, Closed, etc.)', max_length=20)),
                ('signal_hash', models.CharField(blank=True, db_index=True, help_text='Hash for duplicate detection', max_length=64)),
            ],
            options={
                'verbose_name': 'Forex Signal',
                'verbose_name_plural': 'Forex Signals',
                'ordering': ['-scrape_date'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingWatermark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(help_text="Source identifier (e.g., 'fxleaders')", max_length=50, unique=True)),
                ('last_timestamp', models.DateTimeField(blank=True, help_text='Last successful scrape timestamp', null=True)),
                ('last_etag', models.CharField(blank=True, help_text='Last ETag from HTTP response', max_length=255)),
                ('last_modified', models.CharField(blank=True, help_text='Last-Modified header from HTTP response', max_length=255)),
                ('scrape_interval', models.IntegerField(default=60, help_text='Current scraping interval in seconds')),
                ('consecutive_no_changes', models.IntegerField(default=0, help_text='Count of consecutive scrapes with no changes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Scraping Watermark',
                'verbose_name_plural': 'Scraping Watermarks',
            },
        ),
        migrations.CreateModel(
            name='EconomicEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField()),
                ('time', models.CharField(max_length=10)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('EUR', 'Euro')], max_length=3)),
                ('event_name', models.CharField(max_length=255)),
                ('impact', models.CharField(choices=[('HIGH', 'High Impact'), ('MED', 'Medium Impact'), ('LOW', 'Low Impact')], max_length=4)),
                ('actual', models.CharField(blank=True, max_length=50, null=True)),
                ('forecast', models.CharField(blank=True, max_length=50, null=True)),
                ('previous', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['day', 'time'],
                'unique_together': {('day', 'time', 'currency', 'event_name')},
            },
        ),
    ]
